{"version":3,"sources":["actions/actions.js","services/hacker-news-api.js","components/Placeholder.jsx","utils/normalization.js","components/StoryPreview.jsx","components/HackNews.jsx","components/Comment.jsx","components/Story.jsx","components/Header.jsx","components/Footer.jsx","components/App.jsx","reducers/reducers.js","index.js"],"names":["addLatestStories","createAction","addStory","changeLoadingStatus","setBranchStatus","changeBranchStatus","baseUrl","getNewStories","a","axios","get","then","data","getItem","storyId","catch","thrown","console","log","Placeholder","className","to","timestampToTime","timestamp","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Date","Math","round","StoryPreview","id","useState","story","setStory","requestStatus","setRequestStatus","useEffect","response","storyRequest","title","score","by","time","descendants","actionCreators","actions","connect","state","stories","ui","seconds","setSeconds","timer","setTimeout","handleUpdateStoriesIDs","clearTimeout","latestStoriesIDs","slice","onClick","map","storyID","placeholder","offset","Comment","commentID","kids","setKids","comment","setComment","commentBranch","getRequest","btnState","deleted","dangerouslySetInnerHTML","__html","text","status","sessionStorage","setItem","JSON","stringify","disabled","length","kidID","handleKids","Story","match","params","comments","setComments","handleUpdateComments","href","url","Header","target","rel","Footer","parse","getStories","main","path","exact","component","HackNews","basename","handleActions","payload","loadingStatus","combineReducers","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3ae92f6.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const addLatestStories = createAction(\"STORIES_LATEST_ADD\");\n\nexport const addStory = createAction(\"STORY_ADD\");\n\nexport const changeLoadingStatus = createAction(\"LOADING_STATUS_CHANGE\");\n\nexport const setBranchStatus = createAction(\"BRANCH_STATUS_SET\");\n\nexport const changeBranchStatus = createAction(\"BRANCH_STATUS_CHANGE\");\n","import axios from \"axios\";\n\nconst baseUrl = \"https://hacker-news.firebaseio.com/v0/\";\n\nexport const getNewStories = async () =>\n  await axios\n    .get(`${baseUrl}newstories.json?print=pretty`)\n    .then(({ data }) => data);\n\nexport const getItem = (storyId) =>\n  axios\n    .get(`${baseUrl}item/${storyId}.json?print=pretty`)\n    .then(({ data }) => data)\n    .catch(function (thrown) {\n      console.log(thrown);\n    });\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Placeholder = () => {\n  return (\n    <article className=\"story-preview\">\n      <Link className=\"link\" to=\"/\">\n        Title\n      </Link>\n      <section className=\"story-info\">\n        <div>\n          <span>Score:</span> 0\n        </div>\n        <div>\n          <span>By:</span> Anonymous\n        </div>\n        <div>\n          <span>Posted:</span> now\n        </div>\n        <div>\n          <span>Comments:</span> 0\n        </div>\n      </section>\n    </article>\n  );\n};\n\nexport default Placeholder;\n","export const timestampToTime = (timestamp) => {\n  const current = new Date();\n  const previous = new Date(timestamp * 1000);\n\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getItem } from \"../services/hacker-news-api\";\nimport Placeholder from \"./Placeholder\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst StoryPreview = ({ id }) => {\n  const [story, setStory] = useState({});\n  const [requestStatus, setRequestStatus] = useState(\"fetching\");\n\n  useEffect(() => {\n    setRequestStatus(\"fetching\");\n    const storyRequest = async () => {\n      const response = await getItem(id);\n      setStory(response);\n    };\n    storyRequest().then(() => setRequestStatus(\"finished\"));\n  }, [id]);\n\n  return !story || requestStatus === \"fetching\" ? (\n    <Placeholder />\n  ) : (\n    <article className=\"story-preview\">\n      <Link className=\"link\" to={`/${story.id}`}>\n        {story.title}\n      </Link>\n      <section className=\"story-info\">\n        <div>\n          <span>Score:</span> {story.score}\n        </div>\n        <div>\n          <span>By:</span> {story.by}\n        </div>\n        <div>\n          <span>Posted:</span> {timestampToTime(story.time)}\n        </div>\n        <div>\n          <span>Comments:</span> {story.descendants}\n        </div>\n      </section>\n    </article>\n  );\n};\n\nexport default StoryPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\nimport { getNewStories } from \"../services/hacker-news-api\";\nimport StoryPreview from \"./StoryPreview.jsx\";\nimport LazyLoad from \"react-lazyload\";\nimport Placeholder from \"./Placeholder\";\n\nconst mapStateToProps = (state) => {\n  return { stories: state.stories, ui: state.ui };\n};\n\nconst actionCreators = {\n  addLatestStories: actions.addLatestStories,\n};\n\nconst HackNews = ({ stories, addLatestStories }) => {\n  const [seconds, setSeconds] = useState(59);\n\n  // >> TIMER\n  useEffect(() => {\n    let timer;\n    if (seconds > 0) {\n      timer = setTimeout(() => setSeconds(seconds - 1), 1000);\n    } else {\n      handleUpdateStoriesIDs().then(() => setSeconds(59));\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setSeconds, seconds]);\n\n  // << TIMER\n\n  const handleUpdateStoriesIDs = async () => {\n    const latestStoriesIDs = await getNewStories();\n    addLatestStories({ latestStoriesIDs: latestStoriesIDs.slice(0, 100) });\n    setSeconds(59);\n  };\n\n  const renderStories = () =>\n    stories.latestStoriesIDs.map((storyID) => (\n      <LazyLoad key={storyID} placeholder={<Placeholder />} offset={300}>\n        <StoryPreview key={storyID} id={storyID} />\n      </LazyLoad>\n    ));\n\n  return (\n    <main>\n      <h2>LATEST STORIES</h2>\n      <div className=\"refresh-btn-wrapper\">\n        <button\n          className=\"button button-animated\"\n          onClick={handleUpdateStoriesIDs}\n        >\n          <span>\n            <span>Refresh {seconds}</span>\n          </span>\n        </button>\n      </div>\n      <section className=\"stories-list\">{renderStories()}</section>\n    </main>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreators)(HackNews);\n","import React, { useEffect, useState } from \"react\";\nimport { getItem } from \"../services/hacker-news-api\";\nimport * as actions from \"../actions/actions\";\nimport { connect } from \"react-redux\";\nimport LazyLoad from \"react-lazyload\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst mapStateToProps = (state) => {\n  return { ui: state.ui };\n};\n\nconst actionCreators = { changeBranchStatus: actions.changeBranchStatus };\n\nconst Comment = ({ commentID, changeBranchStatus, ui }) => {\n  const [kids, setKids] = useState([]);\n  const [comment, setComment] = useState({});\n  const [requestStatus, setRequestStatus] = useState(\"finished\");\n\n  useEffect(() => {\n    const getRequest = async () => {\n      setRequestStatus(\"fetching\");\n      const data = await getItem(commentID);\n      setComment(data);\n      if (\n        !data ||\n        !data.kids ||\n        !ui.commentBranch[data.id] ||\n        ui.commentBranch[data.id] === \"closed\"\n      ) {\n        return;\n      }\n      setKids(data.kids);\n    };\n\n    getRequest().then(() => setRequestStatus(\"finished\"));\n  }, [commentID, ui]);\n\n  const createMarkup = () => {\n    return { __html: comment.text };\n  };\n\n  const handleKids = () => {\n    if (comment.kids === 0 || kids.length === 0 || !ui) {\n      return;\n    }\n    if (\n      ui.commentBranch[comment.id] &&\n      ui.commentBranch[comment.id] === \"opened\"\n    ) {\n      return kids.map((kidID) => (\n        <LazyLoad key={kidID}>\n          <Comment\n            key={kidID}\n            commentID={kidID}\n            changeBranchStatus={changeBranchStatus}\n            ui={ui}\n          />\n        </LazyLoad>\n      ));\n    }\n  };\n\n  const handleChangeBranchStatus = () => {\n    const status =\n      !ui.commentBranch[comment.id] || ui.commentBranch[comment.id] === \"closed\"\n        ? \"opened\"\n        : \"closed\";\n    sessionStorage.setItem(\n      \"branchesStatus\",\n      JSON.stringify({ ...ui.commentBranch, [comment.id]: status })\n    );\n    changeBranchStatus({ id: comment.id, status });\n  };\n\n  const btnState =\n    !ui.commentBranch[comment.id] || ui.commentBranch[comment.id] === \"closed\";\n\n  return (\n    comment && (\n      <article className=\"comment\">\n        <div className=\"comment-info\">\n          <span>By: </span>\n          {comment.by}\n          <span> Posted: </span>\n          {timestampToTime(comment.time)}\n        </div>\n        {comment.deleted ? (\n          <h4>[commentary deleted]</h4>\n        ) : (\n          <div\n            className=\"comment-text\"\n            dangerouslySetInnerHTML={createMarkup()}\n          />\n        )}\n        {comment.kids ? (\n          <button\n            className=\"button button-animated button-comment\"\n            onClick={handleChangeBranchStatus}\n            disabled={requestStatus === \"fetching\"}\n          >\n            <span>\n              <span>{btnState ? \"Show replies\" : \"Hide replies\"}</span>\n            </span>\n          </button>\n        ) : (\n          <button className=\"button btn-disabled\" disabled>\n            expand replies\n          </button>\n        )}\n        {handleKids()}\n      </article>\n    )\n  );\n};\n\nexport default connect(mapStateToProps, actionCreators)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { getItem } from \"../services/hacker-news-api\";\nimport Comment from \"../components/Comment.jsx\";\nimport Placeholder from \"./Placeholder\";\nimport LazyLoad from \"react-lazyload\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst Story = ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const [story, setStory] = useState({});\n  const [comments, setComments] = useState([]);\n  const [requestStatus, setRequestStatus] = useState(\"finished\");\n  const [seconds, setSeconds] = useState(59);\n\n  // >> TIMER\n\n  useEffect(() => {\n    let timer;\n    if (seconds > 0) {\n      timer = setTimeout(() => setSeconds(seconds - 1), 1000);\n    } else {\n      handleUpdateComments().then(() => setSeconds(59));\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setSeconds, seconds]);\n\n  // << TIMER\n\n  useEffect(() => {\n    const storyRequest = async () => {\n      setRequestStatus(\"fetching\");\n      const response = await getItem(id);\n      if (response.kids) {\n        setComments(response.kids);\n      }\n      setStory(response);\n    };\n    storyRequest().then(() => setRequestStatus(\"finished\"));\n  }, [id, setComments]);\n\n  const renderComments = () =>\n    comments.map((commentID) => (\n      <LazyLoad key={commentID} placeholder={<Placeholder />}>\n        <Comment key={commentID} commentID={commentID} />\n      </LazyLoad>\n    ));\n\n  const handleUpdateComments = async () => {\n    const response = await getItem(id);\n    if (response.kids) {\n      setComments(response.kids);\n    }\n    setStory(response);\n    setSeconds(59);\n  };\n\n  return (\n    story && (\n      <main>\n        {requestStatus === \"fetching\" ? (\n          <h2>Loading</h2>\n        ) : (\n          <article>\n            <h2>\n              {story.title} (\n              <a className=\"nav-link link-source\" href={story.url}>\n                SOURCE\n              </a>\n              )\n            </h2>\n            <section className=\"story-info justify-center\">\n              <div>\n                <span>Score:</span> {story.score}\n              </div>\n              <div>\n                <span>By:</span> {story.by}\n              </div>\n              <div>\n                <span>Posted:</span> {timestampToTime(story.time)}\n              </div>\n            </section>\n            <div className=\"comments-header\">\n              <div className=\"comment-counter-wrapper\">\n                <span>Comments: {story.descendants}</span>\n              </div>\n              <button\n                className=\"button button-animated\"\n                onClick={handleUpdateComments}\n              >\n                <span>\n                  <span>Refresh {seconds}</span>\n                </span>\n              </button>\n            </div>\n            <section className=\"comments-list\">\n              {comments.length > 0 ? (\n                renderComments()\n              ) : (\n                <h3 className=\"h3\">No comments yet</h3>\n              )}\n            </section>\n          </article>\n        )}\n      </main>\n    )\n  );\n};\n\nexport default Story;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>HACKER NEWS</h1>\n      <nav className=\"nav-center\">\n        <Link to=\"/\" className=\"nav-link\">\n          STORIES\n        </Link>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"nav-link\"\n          href=\"https://github.com/Nistler/hacker-news-wrapper\"\n        >\n          SOURCE CODE\n        </a>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <h3 className=\"h3\">Hacker News API wrapper</h3>\n      <div>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"link\"\n          href=\"https://github.com/Nistler/hacker-news-wrapper/\"\n        >\n          Build with React. You can see the description and source code in my\n          repository.\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport * as actions from \"../actions/actions\";\nimport HackNews from \"./HackNews\";\nimport Story from \"./Story.jsx\";\n//import { stories } from \"../__fixtures__/stories\"; // development\n//import { storiesIDs } from \"../__fixtures__/storiesIDs\"; // development\nimport { getNewStories } from \"../services/hacker-news-api\"; // production\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst mapStateToProps = (state) => {\n  return { stories: state.stories };\n};\n\nconst actionCreators = {\n  addLatestStories: actions.addLatestStories,\n  addStory: actions.addStory,\n  setBranchStatus: actions.setBranchStatus,\n};\n\nconst App = ({ addLatestStories, addStory, setBranchStatus }) => {\n  const [requestStatus, setRequestStatus] = useState(\"fetching\");\n\n  useEffect(() => {\n    setRequestStatus(\"fetching\");\n    const getStories = async () => {\n      const latestStoriesIDs = await getNewStories(); // production\n      addLatestStories({ latestStoriesIDs: latestStoriesIDs.slice(0, 100) }); // production\n      const data = JSON.parse(sessionStorage.getItem(\"branchesStatus\"));\n      const commentBranch = data ?? {};\n      setBranchStatus({ commentBranch });\n      //addLatestStories({ latestStoriesIDs: storiesIDs }); // development\n      //addStory({ stories }); // development\n    };\n    getStories().then(() => setRequestStatus(\"finished\"));\n  }, [addLatestStories, addStory, setBranchStatus]);\n\n  const main = (\n    <Switch>\n      <Route path=\"/\" exact component={HackNews} />\n      <Route path=\"/:id\" component={Story} />\n    </Switch>\n  );\n\n  return (\n    <Router basename=\"/\">\n      <Header />\n      {requestStatus === \"fetching\" ? (\n        <main>\n          <h2>LOADING</h2>\n        </main>\n      ) : (\n        main\n      )}\n      <Footer />\n    </Router>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport * as actions from \"../actions/actions\";\n\nconst stories = handleActions(\n  {\n    [actions.addLatestStories](state, { payload: { latestStoriesIDs } }) {\n      return { latestStoriesIDs, stories: state.stories };\n    },\n    [actions.addStory]({ latestStoriesIDs }, { payload: { stories } }) {\n      return { latestStoriesIDs, stories };\n    },\n  },\n  { latestStoriesIDs: [], stories: [] }\n);\n\nconst ui = handleActions(\n  {\n    [actions.changeLoadingStatus](\n      { commentBranch },\n      { payload: { loadingStatus } }\n    ) {\n      return { commentBranch, loadingStatus };\n    },\n    [actions.changeBranchStatus](\n      { commentBranch, loadingStatus },\n      { payload: { id, status } }\n    ) {\n      return {\n        loadingStatus,\n        commentBranch: { ...commentBranch, [id]: status },\n      };\n    },\n    [actions.setBranchStatus](\n      { loadingStatus },\n      { payload: { commentBranch } }\n    ) {\n      return {\n        loadingStatus,\n        commentBranch,\n      };\n    },\n  },\n  { loadingStatus: \"loading\", commentBranch: {} }\n);\n\nexport default combineReducers({ stories, ui });\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style/main.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"@reduxjs/toolkit\";\nimport reducers from \"./reducers/reducers.js\";\n// comment\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}